openapi: 3.0.2
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: backlog api
security:
  -
    bearerAuth: []


paths:
  /OAuth2AccessRequest.action :
    get:
      summary: 認可リクエスト
      parameters:
        - in: query
          name: response_type
          required: true
          schema:
            type: string
            example: "code"
            enum:
              - "code"
        - in: query
          name: client_id
          required: true
          schema:
            type: string
            example: "fvdfbsfgbsdf"
        - in: query
          name: redirect_uri
          required: false
          schema:
            type: string
            example: "https://backlog-gantt-develop.netlify.app/"
        - in: query
          name: state
          required: false
          schema:
            type: string
            example: "code"
      responses:
        "200":
          description: 成功

  /api/v2/oauth2/token:
    post:
      summary: アクセストークンリクエスト
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Oauth2TokenRequest"
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                title: Oauth2TokenRequestResponse
                type: object
                properties:
                  access_token:
                    type: string
                    example: "YOUR_ACCESS_TOKEN"
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: number
                    example: 3600
                  refresh_token:
                    type: string
                    example: YOUR_REFRESH_TOKEN

  /api/v2/users/myself:
    get:
      summary: 認証ユーザー情報の取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/UserData'

  /api/v2/projects:
    get:
      summary: プロジェクトの一覧を取得
      parameters:
        - in: query
          name: archived
          required: false
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/ProjectItem'

  /api/v2/projects/{projectIdOrKey}/users:
    get:
      summary: プロジェクトユーザー一覧の取得
      parameters:
        - in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
            example: "1234"
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/UserData'
  /api/v2/projects/{projectIdOrKey}/image:
    get:
      summary: プロジェクトアイコンの取得
      parameters:
        - in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
            example: "1234"
      responses:
        "200":
          description: 成功
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/v2/projects/{projectIdOrKey}/statuses:
    get:
      summary: プロジェクトの状態一覧の取得
      parameters:
        - in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
            example: "1234"
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'

  /api/v2/users/{userId}/icon:
    get:
      summary: ユーザーのアイコンを取得
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            example: "1234"
      responses:
        "200":
          description: 成功
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary




components:
  schemas:
    ProjectItem:
      description: プロジェクト一覧
      example:
      -   archived: false
          chartEnabled: false
          id: 1
          name: test
          projectKey: TEST
          projectLeaderCanEditProjectLeader: false
          subtaskingEnabled: false
          textFormattingRule: markdown
      properties:
          archived:
              default: false
              description: An explanation about the purpose of this instance.
              example:
              - false
              title: The archived schema
              type: boolean
          chartEnabled:
              default: false
              description: An explanation about the purpose of this instance.
              example:
              - false
              title: The chartEnabled schema
              type: boolean
          id:
              default: 0
              description: An explanation about the purpose of this instance.
              example:
              - 1
              title: The id schema
              type: integer
          name:
              default: ''
              description: An explanation about the purpose of this instance.
              example:
              - test
              title: The name schema
              type: string
          projectKey:
              default: ''
              description: An explanation about the purpose of this instance.
              example:
              - TEST
              title: The projectKey schema
              type: string
          projectLeaderCanEditProjectLeader:
              default: false
              description: An explanation about the purpose of this instance.
              example:
              - false
              title: The projectLeaderCanEditProjectLeader schema
              type: boolean
          subtaskingEnabled:
              default: false
              description: An explanation about the purpose of this instance.
              example:
              - false
              title: The subtaskingEnabled schema
              type: boolean
          textFormattingRule:
              default: ''
              description: An explanation about the purpose of this instance.
              example:
              - markdown
              title: The textFormattingRule schema
              type: string
      required:
      - id
      - projectKey
      - name
      - chartEnabled
      - subtaskingEnabled
      - projectLeaderCanEditProjectLeader
      - textFormattingRule
      - archived
      type: object




    Oauth2TokenCodeRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
          example: authorization_code
          description: 値は”authorization_code”で固定
        code:
          type: string
          description: 認可エンドポイントのリダイレクトから取得した認可コード 開発アプリケーション ページで設定したものと同じUri
        redirect_uri:
          type: string
          description: 認可エンドポイントで指定した場合は必須
        client_id:
          type: string
        client_secret:
          type: string
      required:
          - grant_type
          - code
          - client_id
          - client_secret

    Oauth2TokenRefleshRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - refresh_token
          example: refresh_token
          description: 値は”refresh_token”で固定
        refresh_token :
          type: string
        client_id:
          type: string
        client_secret:
          type: string
      required:
          - grant_type
          - refresh_token
          - client_id
          - client_secret

    Oauth2TokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - authorization_code
            - refresh_token
          example: authorization_code
        client_id:
          type: string
        client_secret:
          type: string
        code:
          type: string
          description: 認可エンドポイントのリダイレクトから取得した認可コード 開発アプリケーション ページで設定したものと同じUri
        redirect_uri:
          type: string
          description: 認可エンドポイントで指定した場合は必須
        refresh_token:
          type: string
      required:
          - grant_type
          - client_id
          - client_secret
    UserData:
      additionalProperties: true
      default: {}
      description: The root schema comprises the entire JSON document.
      example:
          id: 1
          lang: ja
          mailAddress: eguchi@nulab.example
          name: admin
          roleType: 1
          userId: admin
      properties:
          id:
              default: 0
              description: An explanation about the purpose of this instance.
              example: 1
              title: The id schema
              type: integer
          lang:
              default: ''
              description: An explanation about the purpose of this instance.
              example: ja
              title: The lang schema
              type: string
          mailAddress:
              default: ''
              description: An explanation about the purpose of this instance.
              example: eguchi@nulab.example
              title: The mailAddress schema
              type: string
          name:
              default: ''
              description: An explanation about the purpose of this instance.
              example: admin
              title: The name schema
              type: string
          roleType:
              default: 0
              description: An explanation about the purpose of this instance.
              example: 1
              title: The roleType schema
              type: integer
          userId:
              default: ''
              description: An explanation about the purpose of this instance.
              example: admin
              title: The userId schema
              type: string
      required:
      - id
      - userId
      - name
      - roleType
      - lang
      - mailAddress
      title: The root schema
      type: object
    Status:
      description: 課題に設定できる状態
      example:
      -   color: '#ed8077'
          displayOrder: 1000
          id: 1
          name: 未対応
          projectId: 1
      properties:
          color:
              default: ''
              description: An explanation about the purpose of this instance.
              example: '#ed8077'
              title: The color schema
              type: string
          displayOrder:
              default: 0
              description: An explanation about the purpose of this instance.
              example: 1000
              title: The displayOrder schema
              type: integer
          id:
              default: 0
              description: An explanation about the purpose of this instance.
              example: 1
              title: The id schema
              type: integer
          name:
              default: ''
              description: An explanation about the purpose of this instance.
              example: 未対応
              title: The name schema
              type: string
          projectId:
              default: 0
              description: An explanation about the purpose of this instance.
              example: 1
              title: The projectId schema
              type: integer
      required:
      - id
      - projectId
      - name
      - color
      - displayOrder
      title: Status
      type: object


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
